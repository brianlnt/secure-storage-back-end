name: Deploy to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  project-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Update db url
        run: |
          sed -i "s|<CONTAINER_PORT>|${{ secrets.CONTAINER_PORT }}|" src/main/resources/application.yml
          sed -i "s|<EMAIL_HOST>|${{ secrets.EMAIL_HOST }}|" src/main/resources/application.yml
          sed -i "s|<EMAIL_ID>|${{ secrets.EMAIL_ID }}|" src/main/resources/application.yml
          sed -i "s|<EMAIL_PASSWORD>|${{ secrets.EMAIL_PASSWORD }}|" src/main/resources/application.yml
          sed -i "s|<EMAIL_PORT>|${{ secrets.EMAIL_PORT }}|" src/main/resources/application.yml
          sed -i "s|<JWT_SECRET>|${{ secrets.JWT_SECRET }}|" src/main/resources/application.yml
          sed -i "s|<POSTGRESQL_DATABASE>|${{ secrets.POSTGRESQL_DATABASE }}|" src/main/resources/application.yml
          sed -i "s|<POSTGRESQL_HOST>|${{ secrets.POSTGRESQL_HOST }}|" src/main/resources/application.yml
          sed -i "s|<POSTGRESQL_PASSWORD>|${{ secrets.POSTGRESQL_PASSWORD }}|" src/main/resources/application.yml
          sed -i "s|<POSTGRESQL_PORT>|${{ secrets.POSTGRESQL_PORT }}|" src/main/resources/application.yml
          sed -i "s|<POSTGRESQL_USERNAME>|${{ secrets.POSTGRESQL_USERNAME }}|" src/main/resources/application.yml
          sed -i "s|<VERIFY_EMAIL_HOST>|${{ secrets.VERIFY_EMAIL_HOST }}|" src/main/resources/application.yml

      - name: Maven build
        run: mvn clean install -DskipTests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/

  docker-build:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - project-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: target/

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker build and publish to docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_TAG }}:latest